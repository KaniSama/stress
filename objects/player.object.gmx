<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_player_r</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init grid params
n = 6;

xx = 0;
yy = 0;

grid = ds_grid_create(n, n);

alarm[0] = 2;

knife = false;
tool = false;
bucket = false;

movement_frames = 10;

interactible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// alarm for movement
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create grid
randomize();

crk = floor(irandom_range(2, n-1));
shk = floor(irandom_range(1, n-2));

for (i = 0; i &lt; n; i++) {
    for (j = 0; j &lt; n; j++) {
        grid[#i, j] = instance_create(x+i*CELL_W, y+j*CELL_H, grid_cel);
        
        if (j == 0) {
            instance_create(x+i*CELL_W, y+(j-1)*(CELL_H), bord);
            instance_create(x+i*CELL_W, -32, zombie_spawner);
        }
        
        if (i == 0 &amp;&amp; j == crk) instance_create(x+(i-1)*CELL_W, y+j*CELL_H, shack);
        if (i == n-1 &amp;&amp; j == shk) instance_create(x+(i+1)*CELL_W, y+j*CELL_H, crack);
        
        grid[#i, j].xx = i;
        grid[#i, j].yy = j;
        
        if (i == n-1 &amp;&amp; j == n-1) {
            flower_instance = instance_create(x+i*CELL_W, y+j*CELL_H, flower);
            instance_create(x+i*CELL_W, y+j*CELL_H, wave_start_trigger);
        }
    }
}

x = xstart + xx * CELL_W;
y = ystart + yy * CELL_H;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// manage movement
if (alarm[0] &lt;= 0) {
    if (alarm[7] &lt;= 0) {
        if (interactible) {
            if (keyboard_check(ord('A'))) {
                xx = xx-1;
                alarm[7] = movement_frames;
            }
            if (keyboard_check(ord('D'))) {
                xx = xx+1;
                alarm[7] = movement_frames;
            }
            if (keyboard_check(ord('S'))) {
                yy = yy+1;
                alarm[7] = movement_frames;
            }
            if (keyboard_check(ord('W'))) {
                yy = yy-1;
                alarm[7] = movement_frames;
            }
        }
    }
    
    xx = clamp(xx, 0, n-1);
    yy = clamp(yy, 0, n-1);
    
    x += ((xstart + xx * CELL_W) - x) * .1;
    y += ((ystart + yy * CELL_H) - y) * .1;

}

if ((abs(xprevious - x) &lt;= .1 &amp;&amp; abs(yprevious - y) &lt;= .1) &amp;&amp; sprite_index != S_player_tool_take) {
    image_speed = 0;
} else {
    image_speed = .2;
}

if (knife) sprite_index = S_player_knife;
else if (tool) sprite_index = S_player_tool;
else if (bucket) sprite_index = S_player_bucket;
else sprite_index = S_player_r;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="flower">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (bucket) {
    other.hp += 5;
    other.hp = clamp(other.hp, 0, other.max_hp);
    
    bucket = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="111">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room_speed == 120) room_speed = 60;
else room_speed = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>transition = instance_create(x, y, surface_controller_room_end);
transition.command = "menu";
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
